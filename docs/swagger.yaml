basePath: /api/v1
definitions:
  errs.errBase:
    properties:
      code:
        type: integer
      context:
        items:
          $ref: '#/definitions/errs.errBaseContext'
        type: array
      errorMessage:
        type: string
    type: object
  errs.errBaseContext:
    properties:
      key:
        type: string
      message:
        type: string
    type: object
  repos.Author:
    properties:
      bio:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  repos.QueryAuthorGetAll:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  usecases.CreateAuthorBody:
    properties:
      bio:
        type: string
      name:
        type: string
    type: object
  usecases.UpdateAuthorBody:
    properties:
      bio:
        type: string
      name:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a sample server Petstore server.
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /authors:
    get:
      description: Find All Author
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repos.QueryAuthorGetAll'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errs.errBase'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errBase'
      tags:
      - authors
    post:
      consumes:
      - application/json
      description: Create an Author
      parameters:
      - description: Author update info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecases.CreateAuthorBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repos.Author'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errs.errBase'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errBase'
      tags:
      - authors
  /authors/{id}:
    put:
      consumes:
      - application/json
      description: Update an Author
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      - description: Author update info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecases.UpdateAuthorBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repos.Author'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errs.errBase'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errBase'
      tags:
      - authors
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
